#!/bin/bash
#


### IMPORTANT ###
# This file must be run as sudo

#################
### VARIABLES ###
#################

# The name of this script, and the directory where it is located
SCRIPT_NAME="$(basename $(readlink -f $0))"
SCRIPT_DIR="$(dirname $(readlink -f $0))"

# User config directory and files
UC_DIR=$(dirname ${SCRIPT_DIR})/.user_config
DEFAULTS_FILE=${UC_DIR}/defaults
ENC_TOKEN_FILE=${UC_DIR}/enc_token

#################
### FUNCTIONS ###
#################


function _set_github_owner() {

    # Write variable if required
    grep -q '^UC_GH_OWNER=' ${DEFAULTS_FILE} || echo 'UC_GH_OWNER='$1 >> ${DEFAULTS_FILE}

    # Update value
    sed -i 's/UC_GH_OWNER=.*$/UC_GH_OWNER='$1'/' ${DEFAULTS_FILE}
}

function _set_github_pat() {

    # Remove existing if exists
    if [ -e ${ENC_TOKEN_FILE} ]; then
        rm ${ENC_TOKEN_FILE}
    fi

    # Encrypt token
    printf "${INFO}Encrypting your GitHub PAT.\n"
    echo ${1} > ${UC_DIR}/"tmp"
    gpg --armor -o ${ENC_TOKEN_FILE} -c ${UC_DIR}/"tmp" 
    rm ${UC_DIR}/"tmp"

}


###################
### MAIN SCRIPT ###
###################

# Set shell options, enter help set in terminal for definitions
set -euo pipefail

# Source common
source ${SCRIPT_DIR}/common

# Root User Check
# Will exit if isn't running as root user 
_root_check

# Make user config directory
mkdir -p ${UC_DIR}

# Create file if required
if [ ! -e "${UC_DIR}/defaults" ]; then
    echo "" > "${UC_DIR}/defaults"
fi

# Parse arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help) 
      print_usage
      exit 0;;
    -o|--owner)
      _set_github_owner $2
      shift 2
      ;;
    -p|--pat)
      _set_github_pat $2
      shift 2
      ;;
    *)
      echo "Invalid argument: \"$1\""
      exit 1;
  esac
done